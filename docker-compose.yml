services:
  backend:
    container_name: "tea-backend${APP_ENV:+-}${APP_ENV}"
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - tea_network

  db:
    container_name: "tea-db${APP_ENV:+-}${APP_ENV}"
    image: postgres:15-alpine
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - tea_network

  frontend:
    container_name: "tea-frontend${APP_ENV:+-}${APP_ENV}"
    build:
      context: ../tea-frontend
      dockerfile: Dockerfile
    env_file:
      - ./.env
    networks:
      - tea_network

networks:
  tea_network:
    external: true
    name: tea_network${APP_ENV:+_}${APP_ENV}
